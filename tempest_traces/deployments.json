{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "barbican",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:59:02Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "barbican",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "barbican",
                    "application": "barbican",
                    "component": "api",
                    "release_group": "barbican"
                },
                "name": "barbican-api",
                "namespace": "openstack",
                "resourceVersion": "12578327",
                "uid": "0d169611-5398-4157-84be-62ecdbaf46f3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "barbican",
                        "app.kubernetes.io/name": "barbican",
                        "application": "barbican",
                        "component": "api",
                        "release_group": "barbican"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "34e5549733fc70b960653768e5c1daef69fbfa6743be4bc58aec2a1c9413d9fe",
                            "configmap-etc-hash": "1b8e89d083bb95ffb8f2d462fe9dfc114515d5c178a710ea4228ca70048156d5",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "barbican",
                            "app.kubernetes.io/name": "barbican",
                            "application": "barbican",
                            "component": "api",
                            "release_group": "barbican"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "barbican"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "barbican"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/barbican.sh",
                                    "start"
                                ],
                                "image": "chaerikim/barbican:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/barbican.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthcheck",
                                        "port": 9311,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "barbican-api",
                                "ports": [
                                    {
                                        "containerPort": 9311,
                                        "name": "b-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthcheck",
                                        "port": 9311,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/barbican",
                                        "name": "etcbarbican"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/barbican-api-uwsgi.ini",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "barbican-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/barbican.conf",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "barbican.conf"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/logging.conf",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/api_audit_map.conf",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/barbican-api-paste.ini",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "barbican-api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/barbican/policy.yaml",
                                        "name": "barbican-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/tmp/barbican.sh",
                                        "name": "barbican-bin",
                                        "readOnly": true,
                                        "subPath": "barbican.sh"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api,openstack:rabbitmq-nodes"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "barbican-db-sync,barbican-ks-user,barbican-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "barbican-api",
                        "serviceAccountName": "barbican-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "etcbarbican"
                            },
                            {
                                "name": "barbican-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "barbican-etc"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "barbican-bin"
                                },
                                "name": "barbican-bin"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:59:02Z",
                        "lastUpdateTime": "2025-04-19T13:59:02Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:59:02Z",
                        "lastUpdateTime": "2025-05-20T02:37:50Z",
                        "message": "ReplicaSet \"barbican-api-588794c65f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "ceilometer",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T15:38:10Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "central",
                    "app.kubernetes.io/instance": "ceilometer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ceilometer",
                    "application": "ceilometer",
                    "component": "central",
                    "release_group": "ceilometer"
                },
                "name": "ceilometer-central",
                "namespace": "openstack",
                "resourceVersion": "12579996",
                "uid": "4ac87054-1fea-45d3-8893-84c65ef34bcc"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "central",
                        "app.kubernetes.io/instance": "ceilometer",
                        "app.kubernetes.io/name": "ceilometer",
                        "application": "ceilometer",
                        "component": "central",
                        "release_group": "ceilometer"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "d7dd10283e44224ff44d6630353cea53f239f499be0d1649472633a59a6a65d1",
                            "configmap-etc-hash": "c23aadb0e583929af993e0f10d2710810bc5b1126e05c83f5e09caf3cd1bd802",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "central",
                            "app.kubernetes.io/instance": "ceilometer",
                            "app.kubernetes.io/name": "ceilometer",
                            "application": "ceilometer",
                            "component": "central",
                            "release_group": "ceilometer"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "ceilometer"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "ceilometer"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "central"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/ceilometer-central.sh"
                                ],
                                "image": "chaerikim/ceilometer:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "Always",
                                "name": "ceilometer-central",
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "6Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer",
                                        "name": "pod-etc-ceilometer"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/ceilometer.conf",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "ceilometer.conf"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/api_paste.ini",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "api_paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/policy.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/event_definitions.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "event_definitions.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/event_pipeline.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "event_pipeline.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/pipeline.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "pipeline.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/gnocchi_resources.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "gnocchi_resources.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/polling.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "polling.yaml"
                                    },
                                    {
                                        "mountPath": "/tmp/ceilometer-central.sh",
                                        "name": "ceilometer-bin",
                                        "readOnly": true,
                                        "subPath": "ceilometer-central.sh"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "ceilometer-rabbit-init,ceilometer-ks-user"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "Always",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ceilometer-central",
                        "serviceAccountName": "ceilometer-central",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-etc-ceilometer"
                            },
                            {
                                "name": "ceilometer-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "ceilometer-etc"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "ceilometer-bin"
                                },
                                "name": "ceilometer-bin"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T15:38:10Z",
                        "lastUpdateTime": "2025-04-19T15:38:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T15:38:10Z",
                        "lastUpdateTime": "2025-05-20T02:43:17Z",
                        "message": "ReplicaSet \"ceilometer-central-578566f846\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "ceilometer",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T15:38:10Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "notification",
                    "app.kubernetes.io/instance": "ceilometer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ceilometer",
                    "application": "ceilometer",
                    "component": "notification",
                    "release_group": "ceilometer"
                },
                "name": "ceilometer-notification",
                "namespace": "openstack",
                "resourceVersion": "12579979",
                "uid": "8ddfc646-33e6-47a5-9da0-9923add828cf"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "notification",
                        "app.kubernetes.io/instance": "ceilometer",
                        "app.kubernetes.io/name": "ceilometer",
                        "application": "ceilometer",
                        "component": "notification",
                        "release_group": "ceilometer"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "d7dd10283e44224ff44d6630353cea53f239f499be0d1649472633a59a6a65d1",
                            "configmap-etc-hash": "c23aadb0e583929af993e0f10d2710810bc5b1126e05c83f5e09caf3cd1bd802",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "notification",
                            "app.kubernetes.io/instance": "ceilometer",
                            "app.kubernetes.io/name": "ceilometer",
                            "application": "ceilometer",
                            "component": "notification",
                            "release_group": "ceilometer"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "ceilometer"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "ceilometer"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "notification"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/ceilometer-notification.sh"
                                ],
                                "image": "chaerikim/ceilometer:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "Always",
                                "name": "ceilometer-notification",
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "6Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "256Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer",
                                        "name": "pod-etc-ceilometer"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/ceilometer.conf",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "ceilometer.conf"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/api_paste.ini",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "api_paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/policy.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/event_definitions.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "event_definitions.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/event_pipeline.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "event_pipeline.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/pipeline.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "pipeline.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/gnocchi_resources.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "gnocchi_resources.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/meters.d",
                                        "name": "etc-ceilometer-meters"
                                    },
                                    {
                                        "mountPath": "/etc/ceilometer/meters.d/meters.yaml",
                                        "name": "ceilometer-etc",
                                        "readOnly": true,
                                        "subPath": "meters.yaml"
                                    },
                                    {
                                        "mountPath": "/tmp/ceilometer-notification.sh",
                                        "name": "ceilometer-bin",
                                        "readOnly": true,
                                        "subPath": "ceilometer-notification.sh"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "ceilometer-rabbit-init,ceilometer-ks-user"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "Always",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "ceilometer-notification",
                        "serviceAccountName": "ceilometer-notification",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-etc-ceilometer"
                            },
                            {
                                "emptyDir": {},
                                "name": "etc-ceilometer-meters"
                            },
                            {
                                "name": "ceilometer-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "ceilometer-etc"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "ceilometer-bin"
                                },
                                "name": "ceilometer-bin"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T15:38:10Z",
                        "lastUpdateTime": "2025-04-19T15:38:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T15:38:10Z",
                        "lastUpdateTime": "2025-05-20T02:43:16Z",
                        "message": "ReplicaSet \"ceilometer-notification-544b5c6dbc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "cinder",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:01:07Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "cinder",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cinder",
                    "application": "cinder",
                    "component": "api",
                    "release_group": "cinder"
                },
                "name": "cinder-api",
                "namespace": "openstack",
                "resourceVersion": "10869577",
                "uid": "ad09f19c-d55f-407a-8c4e-a784d2debdd8"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "cinder",
                        "app.kubernetes.io/name": "cinder",
                        "application": "cinder",
                        "component": "api",
                        "release_group": "cinder"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "a0cf94a5cf5bcb18984dc8acd4762859b6735eda4d8d6c5d4625228dae2b7643",
                            "configmap-etc-hash": "17a79ba0e366e9d65044e74e884bbb0f8ada845f81c7992f2c7ade31e0435727",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "cinder",
                            "app.kubernetes.io/name": "cinder",
                            "application": "cinder",
                            "component": "api",
                            "release_group": "cinder"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/cinder-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/cinder:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/cinder-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8776,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cinder-api",
                                "ports": [
                                    {
                                        "containerPort": 8776,
                                        "name": "c-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8776,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "privileged": true,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/cinder",
                                        "name": "wsgi-cinder"
                                    },
                                    {
                                        "mountPath": "/tmp/cinder-api.sh",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "cinder-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/cinder-api-uwsgi.ini",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/cinder.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/logging.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/api-paste.ini",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/policy.yaml",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/api_audit_map.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/resource_filters.json",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "resource_filters.json"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "cinder-db-sync,cinder-ks-user,cinder-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "chown",
                                    "-R",
                                    "cinder:",
                                    "/var/lib/cinder/coordination"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-cinder:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ceph-coordination-volume-perms",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "cinder-api",
                        "serviceAccountName": "cinder-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-cinder"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "cinder-bin"
                                },
                                "name": "cinder-bin"
                            },
                            {
                                "name": "cinder-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "cinder-etc"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "cinder-coordination"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-04-19T14:01:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-05-14T01:02:29Z",
                        "message": "ReplicaSet \"cinder-api-7b874f64d8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "cinder",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:01:07Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "scheduler",
                    "app.kubernetes.io/instance": "cinder",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cinder",
                    "application": "cinder",
                    "component": "scheduler",
                    "release_group": "cinder"
                },
                "name": "cinder-scheduler",
                "namespace": "openstack",
                "resourceVersion": "10869628",
                "uid": "75bad06b-74a2-46f8-8a51-6570cdc3ab43"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "scheduler",
                        "app.kubernetes.io/instance": "cinder",
                        "app.kubernetes.io/name": "cinder",
                        "application": "cinder",
                        "component": "scheduler",
                        "release_group": "cinder"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "a0cf94a5cf5bcb18984dc8acd4762859b6735eda4d8d6c5d4625228dae2b7643",
                            "configmap-etc-hash": "17a79ba0e366e9d65044e74e884bbb0f8ada845f81c7992f2c7ade31e0435727",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "scheduler",
                            "app.kubernetes.io/instance": "cinder",
                            "app.kubernetes.io/name": "cinder",
                            "application": "cinder",
                            "component": "scheduler",
                            "release_group": "cinder"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "scheduler"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/cinder-scheduler.sh"
                                ],
                                "image": "chaerikim/cinder:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cinder-scheduler",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/cinder-scheduler.sh",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "cinder-scheduler.sh"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/cinder.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/logging.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/api-paste.ini",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/policy.yaml",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:keystone-api,openstack:cinder-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "cinder-db-sync,cinder-ks-user,cinder-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "chown",
                                    "-R",
                                    "cinder:",
                                    "/var/lib/cinder/coordination"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-cinder:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ceph-coordination-volume-perms",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "cinder-scheduler",
                        "serviceAccountName": "cinder-scheduler",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "cinder-bin"
                                },
                                "name": "cinder-bin"
                            },
                            {
                                "name": "cinder-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "cinder-etc"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "cinder-coordination"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-04-19T14:01:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-05-14T01:02:34Z",
                        "message": "ReplicaSet \"cinder-scheduler-6cc55b66b7\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "21",
                    "meta.helm.sh/release-name": "cinder",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:01:07Z",
                "generation": 21,
                "labels": {
                    "app.kubernetes.io/component": "volume",
                    "app.kubernetes.io/instance": "cinder",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "cinder",
                    "application": "cinder",
                    "component": "volume",
                    "release_group": "cinder"
                },
                "name": "cinder-volume",
                "namespace": "openstack",
                "resourceVersion": "16693230",
                "uid": "0119093b-fa23-44c2-99f1-e793b83e3b9b"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "volume",
                        "app.kubernetes.io/instance": "cinder",
                        "app.kubernetes.io/name": "cinder",
                        "application": "cinder",
                        "component": "volume",
                        "release_group": "cinder"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "a0cf94a5cf5bcb18984dc8acd4762859b6735eda4d8d6c5d4625228dae2b7643",
                            "configmap-etc-hash": "17a79ba0e366e9d65044e74e884bbb0f8ada845f81c7992f2c7ade31e0435727",
                            "kubectl.kubernetes.io/restartedAt": "2025-05-30T01:17:25Z",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "volume",
                            "app.kubernetes.io/instance": "cinder",
                            "app.kubernetes.io/name": "cinder",
                            "application": "cinder",
                            "component": "volume",
                            "release_group": "cinder"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "cinder"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "volume"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/cinder-volume.sh"
                                ],
                                "env": [
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/tmp"
                                    },
                                    {
                                        "name": "PYTHONSTARTUP",
                                        "value": "/tmp/startup_profiler.py"
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "service.name=cinder-volume"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                        "value": "http://jaeger.logging-tracing.svc.cluster.openstack:4318"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                                        "value": "http/protobuf"
                                    },
                                    {
                                        "name": "OS_DEBUG",
                                        "value": "true"
                                    }
                                ],
                                "image": "chaerikim/cinder:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cinder-volume",
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN"
                                        ]
                                    },
                                    "privileged": true,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/var/log/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/cinder-volume.sh",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "cinder-volume.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/conversion",
                                        "name": "cinder-conversion"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/cinder.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/logging.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/conf/backends.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "backends.conf"
                                    },
                                    {
                                        "mountPath": "/etc/ceph",
                                        "name": "etcceph"
                                    },
                                    {
                                        "mountPath": "/etc/ceph/ceph.conf",
                                        "name": "ceph-etc",
                                        "readOnly": true,
                                        "subPath": "ceph.conf"
                                    },
                                    {
                                        "mountPath": "/tmp/client-keyring",
                                        "name": "ceph-keyring",
                                        "readOnly": true,
                                        "subPath": "key"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    },
                                    {
                                        "mountPath": "/etc/sudoers.d/kolla_cinder_sudoers",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder_sudoers"
                                    },
                                    {
                                        "mountPath": "/etc/sudoers.d/kolla_cinder_volume_sudoers",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "cinder_sudoers"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/rootwrap.conf",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "rootwrap.conf"
                                    },
                                    {
                                        "mountPath": "/etc/cinder/rootwrap.d/volume.filters",
                                        "name": "cinder-etc",
                                        "readOnly": true,
                                        "subPath": "volume.filters"
                                    },
                                    {
                                        "mountPath": "/mnt/host-rootfs",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-rootfs"
                                    },
                                    {
                                        "mountPath": "/dev",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-dev"
                                    },
                                    {
                                        "mountPath": "/run/cryptsetup",
                                        "name": "runcryptsetup"
                                    },
                                    {
                                        "mountPath": "/run/lock",
                                        "name": "runlock"
                                    },
                                    {
                                        "mountPath": "/etc/iscsi",
                                        "mountPropagation": "HostToContainer",
                                        "name": "etciscsi"
                                    },
                                    {
                                        "mountPath": "/usr/local/sbin",
                                        "name": "usrlocalsbin"
                                    },
                                    {
                                        "mountPath": "/usr/local/sbin/iscsiadm",
                                        "name": "cinder-bin",
                                        "subPath": "iscsiadm"
                                    },
                                    {
                                        "mountPath": "/usr/local/sbin/multipath",
                                        "name": "cinder-bin",
                                        "subPath": "multipath"
                                    },
                                    {
                                        "mountPath": "/usr/local/sbin/multipathd",
                                        "name": "cinder-bin",
                                        "subPath": "multipathd"
                                    },
                                    {
                                        "mountPath": "/etc/multipath",
                                        "mountPropagation": "Bidirectional",
                                        "name": "etcmultipath"
                                    },
                                    {
                                        "mountPath": "/sys",
                                        "mountPropagation": "HostToContainer",
                                        "name": "sys"
                                    },
                                    {
                                        "mountPath": "/tmp/sitecustomize.py",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "sitecustomize.py"
                                    },
                                    {
                                        "mountPath": "/tmp/startup_profiler.py",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "startup_profiler.py"
                                    },
                                    {
                                        "mountPath": "/tmp/profiler_wrapper.py",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "profiler_wrapper.py"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostIPC": true,
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:keystone-api,openstack:cinder-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "cinder-db-sync,cinder-ks-user,cinder-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    },
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/tmp"
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "service.name=cinder-volume"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                        "value": "http://jaeger.logging-tracing.svc.cluster.openstack:4318"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                                        "value": "http/protobuf"
                                    },
                                    {
                                        "name": "OS_DEBUG",
                                        "value": "true"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "/tmp/ceph-keyring.sh"
                                ],
                                "env": [
                                    {
                                        "name": "RBD_USER",
                                        "value": "cinder"
                                    },
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/tmp"
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "service.name=cinder-volume"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                        "value": "http://jaeger.logging-tracing.svc.cluster.openstack:4318"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                                        "value": "http/protobuf"
                                    },
                                    {
                                        "name": "OS_DEBUG",
                                        "value": "true"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-cinder:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ceph-keyring-placement-rbd1",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/ceph",
                                        "name": "etcceph"
                                    },
                                    {
                                        "mountPath": "/tmp/ceph-keyring.sh",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "ceph-keyring.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/client-keyring",
                                        "name": "ceph-keyring",
                                        "readOnly": true,
                                        "subPath": "key"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "chown",
                                    "-R",
                                    "cinder:",
                                    "/var/lib/cinder/coordination"
                                ],
                                "env": [
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/tmp"
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "service.name=cinder-volume"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                        "value": "http://jaeger.logging-tracing.svc.cluster.openstack:4318"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                                        "value": "http/protobuf"
                                    },
                                    {
                                        "name": "OS_DEBUG",
                                        "value": "true"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-cinder:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ceph-coordination-volume-perms",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/cinder/coordination",
                                        "name": "cinder-coordination"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/tmp/retrieve-internal-tenant.sh"
                                ],
                                "env": [
                                    {
                                        "name": "OS_IDENTITY_API_VERSION",
                                        "value": "3"
                                    },
                                    {
                                        "name": "OS_AUTH_URL",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_AUTH_URL",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_REGION_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_REGION_NAME",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_INTERFACE",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_INTERFACE",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_ENDPOINT_TYPE",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_INTERFACE",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_PROJECT_DOMAIN_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PROJECT_DOMAIN_NAME",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_PROJECT_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PROJECT_NAME",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_USER_DOMAIN_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_USER_DOMAIN_NAME",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_USERNAME",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PASSWORD",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OS_DEFAULT_DOMAIN",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_DEFAULT_DOMAIN",
                                                "name": "cinder-keystone-admin"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERNAL_PROJECT_NAME",
                                        "value": "internal_cinder"
                                    },
                                    {
                                        "name": "INTERNAL_USER_NAME",
                                        "value": "internal_cinder"
                                    },
                                    {
                                        "name": "SERVICE_OS_REGION_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_REGION_NAME",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_OS_PROJECT_DOMAIN_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PROJECT_DOMAIN_NAME",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_OS_PROJECT_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PROJECT_NAME",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_OS_USER_DOMAIN_NAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_USER_DOMAIN_NAME",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_OS_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_USERNAME",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_OS_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "OS_PASSWORD",
                                                "name": "cinder-keystone-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/tmp"
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "service.name=cinder-volume"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                                        "value": "http://jaeger.logging-tracing.svc.cluster.openstack:4318"
                                    },
                                    {
                                        "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                                        "value": "http/protobuf"
                                    },
                                    {
                                        "name": "OS_DEBUG",
                                        "value": "true"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-heat:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init-cinder-conf",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/retrieve-internal-tenant.sh",
                                        "name": "cinder-bin",
                                        "readOnly": true,
                                        "subPath": "retrieve-internal-tenant.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-storage-node": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "cinder-volume",
                        "serviceAccountName": "cinder-volume",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "cinder-bin"
                                },
                                "name": "cinder-bin"
                            },
                            {
                                "name": "cinder-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "cinder-etc"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-shared"
                            },
                            {
                                "emptyDir": {},
                                "name": "cinder-conversion"
                            },
                            {
                                "emptyDir": {},
                                "name": "etcceph"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 292,
                                    "name": "ceph-etc"
                                },
                                "name": "ceph-etc"
                            },
                            {
                                "name": "ceph-keyring",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "cinder"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "cinder-coordination"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                },
                                "name": "host-rootfs"
                            },
                            {
                                "hostPath": {
                                    "path": "/dev",
                                    "type": ""
                                },
                                "name": "host-dev"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/cryptsetup",
                                    "type": ""
                                },
                                "name": "runcryptsetup"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/lock",
                                    "type": ""
                                },
                                "name": "runlock"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/iscsi",
                                    "type": ""
                                },
                                "name": "etciscsi"
                            },
                            {
                                "emptyDir": {},
                                "name": "usrlocalsbin"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/multipath",
                                    "type": ""
                                },
                                "name": "etcmultipath"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys",
                                    "type": ""
                                },
                                "name": "sys"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-04-19T14:01:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:01:07Z",
                        "lastUpdateTime": "2025-05-30T01:17:47Z",
                        "message": "ReplicaSet \"cinder-volume-5dd75d4944\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 21,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "glance",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:53:19Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "glance",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "glance",
                    "application": "glance",
                    "component": "api",
                    "release_group": "glance"
                },
                "name": "glance-api",
                "namespace": "openstack",
                "resourceVersion": "12185182",
                "uid": "56abe283-55d0-418a-8d75-0e7bb7276f06"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "glance",
                        "app.kubernetes.io/name": "glance",
                        "application": "glance",
                        "component": "api",
                        "release_group": "glance"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "8f22dc7c4aa81adca45ce34ef61275285ef47ffeacf02636117b40c515b437b1",
                            "configmap-etc-hash": "375bc093dcce0a5f3791730dd451e260fe6647ceadfa50b0bccb47cf8cced999",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "glance",
                            "app.kubernetes.io/name": "glance",
                            "application": "glance",
                            "component": "api",
                            "release_group": "glance"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "glance"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "glance"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/glance-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/glance:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/glance-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthcheck",
                                        "port": 9292,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "glance-api",
                                "ports": [
                                    {
                                        "containerPort": 9292,
                                        "name": "g-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthcheck",
                                        "port": 9292,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/glance/tmp",
                                        "name": "glance-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/glance",
                                        "name": "etcglance"
                                    },
                                    {
                                        "mountPath": "/tmp/glance-api.sh",
                                        "name": "glance-bin",
                                        "readOnly": true,
                                        "subPath": "glance-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/glance/glance-api.conf",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "glance-api.conf"
                                    },
                                    {
                                        "mountPath": "/etc/glance/glance-api-uwsgi.ini",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "glance-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/glance/logging.conf",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/glance/glance-api-paste.ini",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "glance-api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/glance/policy.yaml",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/glance/api_audit_map.conf",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/sudoers.d/kolla_glance_sudoers",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "glance_sudoers"
                                    },
                                    {
                                        "mountPath": "/etc/glance/rootwrap.conf",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "rootwrap.conf"
                                    },
                                    {
                                        "mountPath": "/etc/glance/rootwrap.d/glance-cinder-store.filters",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "glance-cinder-store.filters"
                                    },
                                    {
                                        "mountPath": "/etc/glance/swift-store.conf",
                                        "name": "glance-etc",
                                        "readOnly": true,
                                        "subPath": "swift-store.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/glance/images",
                                        "name": "glance-images"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api,openstack:rabbitmq-nodes"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "glance-db-sync,glance-ks-user,glance-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "chown",
                                    "-R",
                                    "glance:",
                                    "/var/lib/glance/images"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-glance:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "glance-perms",
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/glance/images",
                                        "name": "glance-images"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "glance-api",
                        "serviceAccountName": "glance-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "glance-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "etcglance"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "glance-bin"
                                },
                                "name": "glance-bin"
                            },
                            {
                                "name": "glance-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "glance-etc"
                                }
                            },
                            {
                                "name": "glance-images",
                                "persistentVolumeClaim": {
                                    "claimName": "glance-images"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:53:19Z",
                        "lastUpdateTime": "2025-04-19T13:53:19Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:53:19Z",
                        "lastUpdateTime": "2025-05-19T04:38:52Z",
                        "message": "ReplicaSet \"glance-api-6fdd9b7984\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "heat",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:55:26Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "heat",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "heat",
                    "application": "heat",
                    "component": "api",
                    "release_group": "heat"
                },
                "name": "heat-api",
                "namespace": "openstack",
                "resourceVersion": "12242548",
                "uid": "d24b73a9-b76d-4d1c-af3e-9e207305aa05"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "heat",
                        "app.kubernetes.io/name": "heat",
                        "application": "heat",
                        "component": "api",
                        "release_group": "heat"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "eb2fa61a6161f7fbdccdbe087e662e0325fcdf59659a9eaf2560e8dc817e4783",
                            "configmap-etc-hash": "4a95fe23b55807f3b2a71aa33663a3b5736a85cef3fc3ce453fc11f34c372904",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "heat",
                            "app.kubernetes.io/name": "heat",
                            "application": "heat",
                            "component": "api",
                            "release_group": "heat"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/heat-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/heat:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/heat-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8004,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "heat-api",
                                "ports": [
                                    {
                                        "containerPort": 8004,
                                        "name": "h-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8004,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/heat",
                                        "name": "pod-etc-heat"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/heat",
                                        "name": "wsgi-heat"
                                    },
                                    {
                                        "mountPath": "/tmp/heat-api.sh",
                                        "name": "heat-bin",
                                        "readOnly": true,
                                        "subPath": "heat-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/heat/heat.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "heat.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/heat-api-uwsgi.ini",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "heat-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/heat/logging.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/api-paste.ini",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/heat/policy.yaml",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/heat/api_audit_map.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:rabbitmq-nodes,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "heat-db-sync,heat-ks-user,heat-trustee-ks-user,heat-domain-ks-user,heat-ks-endpoints,heat-bootstrap"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "heat-api",
                        "serviceAccountName": "heat-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-etc-heat"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-heat"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "heat-bin"
                                },
                                "name": "heat-bin"
                            },
                            {
                                "name": "heat-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "heat-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-04-19T13:55:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-05-19T07:52:23Z",
                        "message": "ReplicaSet \"heat-api-5d56bcccdc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "heat",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:55:26Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "cfn",
                    "app.kubernetes.io/instance": "heat",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "heat",
                    "application": "heat",
                    "component": "cfn",
                    "release_group": "heat"
                },
                "name": "heat-cfn",
                "namespace": "openstack",
                "resourceVersion": "12242429",
                "uid": "a18a7f95-33f6-4f82-9a51-ab9e02a4d0ba"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "cfn",
                        "app.kubernetes.io/instance": "heat",
                        "app.kubernetes.io/name": "heat",
                        "application": "heat",
                        "component": "cfn",
                        "release_group": "heat"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "eb2fa61a6161f7fbdccdbe087e662e0325fcdf59659a9eaf2560e8dc817e4783",
                            "configmap-etc-hash": "4a95fe23b55807f3b2a71aa33663a3b5736a85cef3fc3ce453fc11f34c372904",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "cfn",
                            "app.kubernetes.io/instance": "heat",
                            "app.kubernetes.io/name": "heat",
                            "application": "heat",
                            "component": "cfn",
                            "release_group": "heat"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "cfn"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/heat-cfn.sh",
                                    "start"
                                ],
                                "image": "chaerikim/heat:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/heat-cfn.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "heat-cfn",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "name": "h-cfn",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/heat",
                                        "name": "pod-etc-heat"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/heat",
                                        "name": "wsgi-heat"
                                    },
                                    {
                                        "mountPath": "/tmp/heat-cfn.sh",
                                        "name": "heat-bin",
                                        "readOnly": true,
                                        "subPath": "heat-cfn.sh"
                                    },
                                    {
                                        "mountPath": "/etc/heat/heat-api-cfn-uwsgi.ini",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "heat-api-cfn-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/heat/heat.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "heat.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/logging.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/api-paste.ini",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/heat/policy.yaml",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/heat/api_audit_map.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:rabbitmq-nodes,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "heat-db-sync,heat-ks-user,heat-trustee-ks-user,heat-domain-ks-user,heat-ks-endpoints,heat-bootstrap"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "heat-cfn",
                        "serviceAccountName": "heat-cfn",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-etc-heat"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-heat"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "heat-bin"
                                },
                                "name": "heat-bin"
                            },
                            {
                                "name": "heat-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "heat-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-04-19T13:55:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-05-19T07:51:55Z",
                        "message": "ReplicaSet \"heat-cfn-65f96d57d7\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "heat",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:55:26Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "engine",
                    "app.kubernetes.io/instance": "heat",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "heat",
                    "application": "heat",
                    "component": "engine",
                    "release_group": "heat"
                },
                "name": "heat-engine",
                "namespace": "openstack",
                "resourceVersion": "12242351",
                "uid": "891c4e79-4120-4d0c-9faf-7d5e2ed4ad49"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "engine",
                        "app.kubernetes.io/instance": "heat",
                        "app.kubernetes.io/name": "heat",
                        "application": "heat",
                        "component": "engine",
                        "release_group": "heat"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "eb2fa61a6161f7fbdccdbe087e662e0325fcdf59659a9eaf2560e8dc817e4783",
                            "configmap-etc-hash": "4a95fe23b55807f3b2a71aa33663a3b5736a85cef3fc3ce453fc11f34c372904",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "engine",
                            "app.kubernetes.io/instance": "heat",
                            "app.kubernetes.io/name": "heat",
                            "application": "heat",
                            "component": "engine",
                            "release_group": "heat"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "heat"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "engine"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/heat-engine.sh",
                                    "start"
                                ],
                                "image": "chaerikim/heat:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/heat-engine.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "name": "heat-engine",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/heat",
                                        "name": "pod-etc-heat"
                                    },
                                    {
                                        "mountPath": "/tmp/heat-engine.sh",
                                        "name": "heat-bin",
                                        "readOnly": true,
                                        "subPath": "heat-engine.sh"
                                    },
                                    {
                                        "mountPath": "/etc/heat/heat.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "heat.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/logging.conf",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/heat/policy.yaml",
                                        "name": "heat-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:rabbitmq-nodes,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "heat-db-sync,heat-ks-user,heat-trustee-ks-user,heat-domain-ks-user,heat-ks-endpoints,heat-bootstrap"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "heat-engine",
                        "serviceAccountName": "heat-engine",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-etc-heat"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "heat-bin"
                                },
                                "name": "heat-bin"
                            },
                            {
                                "name": "heat-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "heat-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-04-19T13:55:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:55:26Z",
                        "lastUpdateTime": "2025-05-19T07:51:49Z",
                        "message": "ReplicaSet \"heat-engine-57bcd9855\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "horizon",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-21T10:34:32Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "horizon",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "horizon",
                    "application": "horizon",
                    "component": "server",
                    "release_group": "horizon"
                },
                "name": "horizon",
                "namespace": "openstack",
                "resourceVersion": "12663763",
                "uid": "e39c0614-c4c6-4ba4-80be-ed68a06397b8"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "server",
                        "app.kubernetes.io/instance": "horizon",
                        "app.kubernetes.io/name": "horizon",
                        "application": "horizon",
                        "component": "server",
                        "release_group": "horizon"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "24e161cad96154593c9718539545ed5746f06ebd33ca11238a2f946ab4b4a855",
                            "configmap-etc-hash": "606bbd6cba4db5f967ef814b0af996434b4d64aa7d1b9b331d1f0fb2e6c49c14",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "server",
                            "app.kubernetes.io/instance": "horizon",
                            "app.kubernetes.io/name": "horizon",
                            "application": "horizon",
                            "component": "server",
                            "release_group": "horizon"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "horizon"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "horizon"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/horizon.sh",
                                    "start"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-horizon:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/horizon.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 80,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 180,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "horizon",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "name": "web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 80,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": false,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/www/html/",
                                        "name": "static-horizon"
                                    },
                                    {
                                        "mountPath": "/tmp/horizon.sh",
                                        "name": "horizon-bin",
                                        "readOnly": true,
                                        "subPath": "horizon.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/manage.py",
                                        "name": "horizon-bin",
                                        "readOnly": true,
                                        "subPath": "manage.py"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/sites-available/000-default.conf",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "horizon.conf"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/conf-available/security.conf",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "security.conf"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/horizon/django.wsgi",
                                        "name": "horizon-bin",
                                        "readOnly": true,
                                        "subPath": "django.wsgi"
                                    },
                                    {
                                        "mountPath": "/etc/openstack-dashboard/local_settings",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "local_settings"
                                    },
                                    {
                                        "mountPath": "/etc/openstack-dashboard/ceilometer_policy.yaml",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "ceilometer_policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/openstack-dashboard/heat_policy.yaml",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "heat_policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/openstack-dashboard/ceilometer_policy.json",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "ceilometer_policy.json"
                                    },
                                    {
                                        "mountPath": "/etc/openstack-dashboard/heat_policy.json",
                                        "name": "horizon-etc",
                                        "readOnly": true,
                                        "subPath": "heat_policy.json"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:memcached,openstack:mariadb-cluster,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "horizon-db-sync"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "horizon",
                        "serviceAccountName": "horizon",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-horizon"
                            },
                            {
                                "emptyDir": {},
                                "name": "static-horizon"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "horizon-bin"
                                },
                                "name": "horizon-bin"
                            },
                            {
                                "name": "horizon-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "horizon-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-21T10:34:32Z",
                        "lastUpdateTime": "2025-04-21T10:34:32Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-22T10:05:26Z",
                        "lastUpdateTime": "2025-04-22T10:05:26Z",
                        "message": "ReplicaSet \"horizon-74f9bcf99c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "keystone",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T13:49:35Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "keystone",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "keystone",
                    "application": "keystone",
                    "component": "api",
                    "release_group": "keystone"
                },
                "name": "keystone-api",
                "namespace": "openstack",
                "resourceVersion": "10040487",
                "uid": "cc628deb-1dfb-44d4-9cbe-fe755f7f3460"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "keystone",
                        "app.kubernetes.io/name": "keystone",
                        "application": "keystone",
                        "component": "api",
                        "release_group": "keystone"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "403c126c0a242d1ce8e425bb5da0a2976ab32dd2a759145df69a389ade9d1179",
                            "configmap-etc-hash": "08157bb413b74c41e760aa0bc65862cbfc8f69fee12a8be5e8f2a21ad4cfed25",
                            "kubectl.kubernetes.io/restartedAt": "2025-05-13T06:42:25Z",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "keystone",
                            "app.kubernetes.io/name": "keystone",
                            "application": "keystone",
                            "component": "api",
                            "release_group": "keystone"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "keystone"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "keystone"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/keystone-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/keystone-rxt:1.1",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/keystone-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/v3/",
                                        "port": 5000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 50,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 15
                                },
                                "name": "keystone-api",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "ks-pub",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/v3/",
                                        "port": 5000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 15
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/etc/keystone",
                                        "name": "etckeystone"
                                    },
                                    {
                                        "mountPath": "/var/log/apache2",
                                        "name": "logs-apache"
                                    },
                                    {
                                        "mountPath": "/var/run/apache2",
                                        "name": "run-apache"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/keystone",
                                        "name": "wsgi-keystone"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/keystone.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "keystone.conf"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/ports.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "ports.conf"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/logging.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/policy.yaml",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/access_rules.json",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "access_rules.json"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/sso_callback_template.html",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "sso_callback_template.html"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/conf-enabled/wsgi-keystone.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "wsgi-keystone.conf"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/mods-available/mpm_event.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "mpm_event.conf"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/conf-enabled/security.conf",
                                        "name": "keystone-etc",
                                        "readOnly": true,
                                        "subPath": "security.conf"
                                    },
                                    {
                                        "mountPath": "/tmp/keystone-api.sh",
                                        "name": "keystone-bin",
                                        "readOnly": true,
                                        "subPath": "keystone-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/fernet-keys/",
                                        "name": "keystone-fernet-keys"
                                    },
                                    {
                                        "mountPath": "/etc/keystone/credential-keys/",
                                        "name": "keystone-credential-keys"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:memcached,openstack:mariadb-cluster"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "keystone-db-sync,keystone-credential-setup,keystone-fernet-setup"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "keystone-api",
                        "serviceAccountName": "keystone-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "etckeystone"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-keystone"
                            },
                            {
                                "emptyDir": {},
                                "name": "logs-apache"
                            },
                            {
                                "emptyDir": {},
                                "name": "run-apache"
                            },
                            {
                                "name": "keystone-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "keystone-etc"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "keystone-bin"
                                },
                                "name": "keystone-bin"
                            },
                            {
                                "name": "keystone-fernet-keys",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "keystone-fernet-keys"
                                }
                            },
                            {
                                "name": "keystone-credential-keys",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "keystone-credential-keys"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T13:49:35Z",
                        "lastUpdateTime": "2025-04-19T13:49:35Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T13:49:35Z",
                        "lastUpdateTime": "2025-05-13T06:43:30Z",
                        "message": "ReplicaSet \"keystone-api-6d6dbdf48\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "neutron",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T17:01:05Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "rpc_server",
                    "app.kubernetes.io/instance": "neutron",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "neutron",
                    "application": "neutron",
                    "component": "rpc_server",
                    "release_group": "neutron"
                },
                "name": "neutron-rpc-server",
                "namespace": "openstack",
                "resourceVersion": "10110160",
                "uid": "4327fde5-c6a1-4a94-af94-fb7130442519"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "rpc_server",
                        "app.kubernetes.io/instance": "neutron",
                        "app.kubernetes.io/name": "neutron",
                        "application": "neutron",
                        "component": "rpc_server",
                        "release_group": "neutron"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "47f52b2e2a5e3e84d699ae515d3cbe6dcbae967ab8fc06daa6e387b84cf87a1d",
                            "configmap-etc-hash": "c86a11a764180ec115ea5c5be0ce7fc622c53ec8a376fe68fb1b4790c3cf7791",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "rpc_server",
                            "app.kubernetes.io/instance": "neutron",
                            "app.kubernetes.io/name": "neutron",
                            "application": "neutron",
                            "component": "rpc_server",
                            "release_group": "neutron"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "neutron"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "neutron"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "rpc_server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/neutron-rpc-server.sh",
                                    "start"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-neutron:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/neutron-rpc-server.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "name": "neutron-rpc-server",
                                "ports": [
                                    {
                                        "containerPort": 9696,
                                        "name": "q-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    },
                                    {
                                        "mountPath": "/var/lib/neutron",
                                        "name": "pod-var-neutron"
                                    },
                                    {
                                        "mountPath": "/tmp/neutron-rpc-server.sh",
                                        "name": "neutron-bin",
                                        "readOnly": true,
                                        "subPath": "neutron-rpc-server.sh"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/neutron.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "neutron.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/neutron-api-uwsgi.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "neutron-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/logging.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/api_audit_map.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/plugins/ml2/ml2_conf.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "ml2_conf.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/api-paste.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/policy.yaml",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:rabbitmq-nodes,openstack:memcached,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "neutron-db-sync,neutron-ks-user,neutron-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "/tmp/neutron-ovn-init.sh"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-neutron:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ovn-neutron-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    },
                                    {
                                        "mountPath": "/tmp/neutron-ovn-init.sh",
                                        "name": "neutron-bin",
                                        "readOnly": true,
                                        "subPath": "neutron-ovn-init.sh"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "neutron-rpc-server",
                        "serviceAccountName": "neutron-rpc-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-shared"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-var-neutron"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "neutron-bin"
                                },
                                "name": "neutron-bin"
                            },
                            {
                                "name": "neutron-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "neutron-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T17:01:05Z",
                        "lastUpdateTime": "2025-04-19T17:01:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T17:01:05Z",
                        "lastUpdateTime": "2025-05-07T05:39:21Z",
                        "message": "ReplicaSet \"neutron-rpc-server-6b495f596c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "neutron",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T17:01:05Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "neutron",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "neutron",
                    "application": "neutron",
                    "component": "server",
                    "release_group": "neutron"
                },
                "name": "neutron-server",
                "namespace": "openstack",
                "resourceVersion": "10110289",
                "uid": "d58f50e4-4291-4f1d-880d-c43f53c5cd8d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "server",
                        "app.kubernetes.io/instance": "neutron",
                        "app.kubernetes.io/name": "neutron",
                        "application": "neutron",
                        "component": "server",
                        "release_group": "neutron"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "47f52b2e2a5e3e84d699ae515d3cbe6dcbae967ab8fc06daa6e387b84cf87a1d",
                            "configmap-etc-hash": "c86a11a764180ec115ea5c5be0ce7fc622c53ec8a376fe68fb1b4790c3cf7791",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "server",
                            "app.kubernetes.io/instance": "neutron",
                            "app.kubernetes.io/name": "neutron",
                            "application": "neutron",
                            "component": "server",
                            "release_group": "neutron"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "neutron"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "neutron"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/neutron-server.sh",
                                    "start"
                                ],
                                "image": "chaerikim/neutron:otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/neutron-server.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9696,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "neutron-server",
                                "ports": [
                                    {
                                        "containerPort": 9696,
                                        "name": "q-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9696,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    },
                                    {
                                        "mountPath": "/var/lib/neutron",
                                        "name": "pod-var-neutron"
                                    },
                                    {
                                        "mountPath": "/tmp/neutron-server.sh",
                                        "name": "neutron-bin",
                                        "readOnly": true,
                                        "subPath": "neutron-server.sh"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/neutron.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "neutron.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/neutron-api-uwsgi.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "neutron-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/logging.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/api_audit_map.conf",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/plugins/ml2/ml2_conf.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "ml2_conf.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/api-paste.ini",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/neutron/policy.yaml",
                                        "name": "neutron-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:rabbitmq-nodes,openstack:memcached,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "neutron-db-sync,neutron-ks-user,neutron-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "/tmp/neutron-ovn-init.sh"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-neutron:2024.1-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ovn-neutron-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    },
                                    {
                                        "mountPath": "/tmp/neutron-ovn-init.sh",
                                        "name": "neutron-bin",
                                        "readOnly": true,
                                        "subPath": "neutron-ovn-init.sh"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "neutron-server",
                        "serviceAccountName": "neutron-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-shared"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-var-neutron"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "neutron-bin"
                                },
                                "name": "neutron-bin"
                            },
                            {
                                "name": "neutron-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "neutron-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T17:01:05Z",
                        "lastUpdateTime": "2025-04-19T17:01:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T17:01:05Z",
                        "lastUpdateTime": "2025-05-14T02:59:29Z",
                        "message": "ReplicaSet \"neutron-server-5b745b5b4c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "nova",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-05-19T07:01:44Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "metadata",
                    "app.kubernetes.io/instance": "nova",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nova",
                    "application": "nova",
                    "component": "metadata",
                    "release_group": "nova"
                },
                "name": "nova-api-metadata",
                "namespace": "openstack",
                "resourceVersion": "12545296",
                "uid": "73cef9d8-5295-469d-b0d3-cdba575cbeea"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "metadata",
                        "app.kubernetes.io/instance": "nova",
                        "app.kubernetes.io/name": "nova",
                        "application": "nova",
                        "component": "metadata",
                        "release_group": "nova"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "cd9d4ac1b59d2090ae2f9bfc1ee5b5235140d641c32009c3788fddd032381292",
                            "configmap-etc-hash": "088134d6a549dcfd22ef4323190024123f56886337474b0f626d0826e00638f8",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "metadata",
                            "app.kubernetes.io/instance": "nova",
                            "app.kubernetes.io/name": "nova",
                            "application": "nova",
                            "component": "metadata",
                            "release_group": "nova"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "metadata"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/nova-api-metadata.sh",
                                    "start"
                                ],
                                "image": "chaerikim/nova:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/nova-api-metadata.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8775,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "nova-api",
                                "ports": [
                                    {
                                        "containerPort": 8775,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8775,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-api-metadata.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-api-metadata.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova-metadata-uwsgi.ini",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova-metadata-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/sbin/iptables",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "fake-iptables.sh"
                                    },
                                    {
                                        "mountPath": "/sbin/iptables-restore",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "fake-iptables.sh"
                                    },
                                    {
                                        "mountPath": "/sbin/iptables-save",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "fake-iptables.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/api-paste.ini",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/nova/policy.yaml",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/nova/api_audit_map.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    },
                                    {
                                        "mountPath": "/etc/sudoers.d/kolla_nova_sudoers",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova_sudoers"
                                    },
                                    {
                                        "mountPath": "/etc/nova/rootwrap.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "rootwrap.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/rootwrap.d/api-metadata.filters",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "api-metadata.filters"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:rabbitmq-nodes,openstack:mariadb-cluster,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "nova-db-sync,nova-ks-user,nova-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "/tmp/nova-api-metadata-init.sh"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-nova-efi:2024.1-ubuntu_jammy-1737928811",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nova-api-metadata-init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-api-metadata-init.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-api-metadata-init.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "nova-api-metadata",
                        "serviceAccountName": "nova-api-metadata",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "nova-bin"
                                },
                                "name": "nova-bin"
                            },
                            {
                                "name": "nova-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "nova-etc"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-shared"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-19T07:01:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-20T00:42:55Z",
                        "message": "ReplicaSet \"nova-api-metadata-8695796d85\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "nova",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-05-19T07:01:44Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "os-api",
                    "app.kubernetes.io/instance": "nova",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nova",
                    "application": "nova",
                    "component": "os-api",
                    "release_group": "nova"
                },
                "name": "nova-api-osapi",
                "namespace": "openstack",
                "resourceVersion": "12545321",
                "uid": "3d8da23a-9e81-48b0-891d-9591b2eb53fd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "os-api",
                        "app.kubernetes.io/instance": "nova",
                        "app.kubernetes.io/name": "nova",
                        "application": "nova",
                        "component": "os-api",
                        "release_group": "nova"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "cd9d4ac1b59d2090ae2f9bfc1ee5b5235140d641c32009c3788fddd032381292",
                            "configmap-etc-hash": "088134d6a549dcfd22ef4323190024123f56886337474b0f626d0826e00638f8",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "os-api",
                            "app.kubernetes.io/instance": "nova",
                            "app.kubernetes.io/name": "nova",
                            "application": "nova",
                            "component": "os-api",
                            "release_group": "nova"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "os-api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/nova-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/nova:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/nova-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8774,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "nova-osapi",
                                "ports": [
                                    {
                                        "containerPort": 8774,
                                        "name": "n-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8774,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/lib/nova",
                                        "name": "pod-var-nova"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-api.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova-api-uwsgi.ini",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/api-paste.ini",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "api-paste.ini"
                                    },
                                    {
                                        "mountPath": "/etc/nova/policy.yaml",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/nova/api_audit_map.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "api_audit_map.conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:rabbitmq-nodes,openstack:mariadb-cluster,openstack:keystone-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "nova-db-sync,nova-ks-user,nova-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "nova-api-osapi",
                        "serviceAccountName": "nova-api-osapi",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-var-nova"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "nova-bin"
                                },
                                "name": "nova-bin"
                            },
                            {
                                "name": "nova-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "nova-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-19T07:01:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-20T00:41:26Z",
                        "message": "ReplicaSet \"nova-api-osapi-79665d76cb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "nova",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-05-19T07:01:44Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "conductor",
                    "app.kubernetes.io/instance": "nova",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nova",
                    "application": "nova",
                    "component": "conductor",
                    "release_group": "nova"
                },
                "name": "nova-conductor",
                "namespace": "openstack",
                "resourceVersion": "12663854",
                "uid": "33ec1ea9-fee9-40fb-a12a-54a38fd74454"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "conductor",
                        "app.kubernetes.io/instance": "nova",
                        "app.kubernetes.io/name": "nova",
                        "application": "nova",
                        "component": "conductor",
                        "release_group": "nova"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "cd9d4ac1b59d2090ae2f9bfc1ee5b5235140d641c32009c3788fddd032381292",
                            "configmap-etc-hash": "088134d6a549dcfd22ef4323190024123f56886337474b0f626d0826e00638f8",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "conductor",
                            "app.kubernetes.io/instance": "nova",
                            "app.kubernetes.io/name": "nova",
                            "application": "nova",
                            "component": "conductor",
                            "release_group": "nova"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "conductor"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/nova-conductor.sh"
                                ],
                                "env": [
                                    {
                                        "name": "RPC_PROBE_TIMEOUT",
                                        "value": "60"
                                    },
                                    {
                                        "name": "RPC_PROBE_RETRIES",
                                        "value": "3"
                                    }
                                ],
                                "image": "chaerikim/nova:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "/tmp/health-probe.py",
                                            "--config-file",
                                            "/etc/nova/nova.conf",
                                            "--service-queue-name",
                                            "conductor",
                                            "--liveness-probe"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 90,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 70
                                },
                                "name": "nova-conductor",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "/tmp/health-probe.py",
                                            "--config-file",
                                            "/etc/nova/nova.conf",
                                            "--service-queue-name",
                                            "conductor"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 80,
                                    "periodSeconds": 90,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 70
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-conductor.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-conductor.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/health-probe.py",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "health-probe.py"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/policy.yaml",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:rabbitmq-nodes,openstack:mariadb-cluster,openstack:keystone-api,openstack:nova-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "nova-db-sync"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "nova-conductor",
                        "serviceAccountName": "nova-conductor",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "nova-bin"
                                },
                                "name": "nova-bin"
                            },
                            {
                                "name": "nova-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "nova-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-19T07:01:45Z",
                        "lastUpdateTime": "2025-05-19T07:01:45Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-20T00:44:36Z",
                        "message": "ReplicaSet \"nova-conductor-78b64cddb8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "nova",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-05-19T07:01:44Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "novnc-proxy",
                    "app.kubernetes.io/instance": "nova",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nova",
                    "application": "nova",
                    "component": "novnc-proxy",
                    "release_group": "nova"
                },
                "name": "nova-novncproxy",
                "namespace": "openstack",
                "resourceVersion": "12545635",
                "uid": "e500a88e-bc36-4582-8cf7-317a527462a6"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "novnc-proxy",
                        "app.kubernetes.io/instance": "nova",
                        "app.kubernetes.io/name": "nova",
                        "application": "nova",
                        "component": "novnc-proxy",
                        "release_group": "nova"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "cd9d4ac1b59d2090ae2f9bfc1ee5b5235140d641c32009c3788fddd032381292",
                            "configmap-etc-hash": "088134d6a549dcfd22ef4323190024123f56886337474b0f626d0826e00638f8",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "novnc-proxy",
                            "app.kubernetes.io/instance": "nova",
                            "app.kubernetes.io/name": "nova",
                            "application": "nova",
                            "component": "novnc-proxy",
                            "release_group": "nova"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "novnc-proxy"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/nova-console-proxy.sh"
                                ],
                                "image": "chaerikim/nova:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 6080
                                    },
                                    "timeoutSeconds": 15
                                },
                                "name": "nova-novncproxy",
                                "ports": [
                                    {
                                        "containerPort": 6080,
                                        "name": "n-novnc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 6080
                                    },
                                    "timeoutSeconds": 15
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-console-proxy.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-console-proxy.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/usr/share/novnc",
                                        "name": "pod-usr-share-novnc",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "nova-db-sync"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "command": [
                                    "/tmp/nova-console-proxy-init.sh"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-nova-efi:2024.1-ubuntu_jammy-1737928811",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nova-novncproxy-init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-console-proxy-init.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-console-proxy-init.sh"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/tmp/pod-shared",
                                        "name": "pod-shared"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/tmp/nova-console-proxy-init-assets.sh"
                                ],
                                "image": "quay.io/rackspace/rackerlabs-nova-efi:2024.1-ubuntu_jammy-1737928811",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nova-novncproxy-init-assets",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-console-proxy-init-assets.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-console-proxy-init-assets.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/usr/share/novnc",
                                        "name": "pod-usr-share-novnc"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "nova-novncproxy",
                        "serviceAccountName": "nova-novncproxy",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "nova-bin"
                                },
                                "name": "nova-bin"
                            },
                            {
                                "name": "nova-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "nova-etc"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-usr-share-novnc"
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-shared"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-19T07:01:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-20T00:42:09Z",
                        "message": "ReplicaSet \"nova-novncproxy-598467bbb6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "meta.helm.sh/release-name": "nova",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-05-19T07:01:44Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/component": "scheduler",
                    "app.kubernetes.io/instance": "nova",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nova",
                    "application": "nova",
                    "component": "scheduler",
                    "release_group": "nova"
                },
                "name": "nova-scheduler",
                "namespace": "openstack",
                "resourceVersion": "12663857",
                "uid": "596ab97b-c869-4c37-9197-505737f7f7b4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "scheduler",
                        "app.kubernetes.io/instance": "nova",
                        "app.kubernetes.io/name": "nova",
                        "application": "nova",
                        "component": "scheduler",
                        "release_group": "nova"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "cd9d4ac1b59d2090ae2f9bfc1ee5b5235140d641c32009c3788fddd032381292",
                            "configmap-etc-hash": "088134d6a549dcfd22ef4323190024123f56886337474b0f626d0826e00638f8",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "scheduler",
                            "app.kubernetes.io/instance": "nova",
                            "app.kubernetes.io/name": "nova",
                            "application": "nova",
                            "component": "scheduler",
                            "release_group": "nova"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "nova"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "scheduler"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/nova-scheduler.sh"
                                ],
                                "env": [
                                    {
                                        "name": "RPC_PROBE_TIMEOUT",
                                        "value": "60"
                                    },
                                    {
                                        "name": "RPC_PROBE_RETRIES",
                                        "value": "3"
                                    }
                                ],
                                "image": "chaerikim/nova:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "/tmp/health-probe.py",
                                            "--config-file",
                                            "/etc/nova/nova.conf",
                                            "--service-queue-name",
                                            "scheduler",
                                            "--liveness-probe"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 90,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 70
                                },
                                "name": "nova-scheduler",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "python",
                                            "/tmp/health-probe.py",
                                            "--config-file",
                                            "/etc/nova/nova.conf",
                                            "--service-queue-name",
                                            "scheduler"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 80,
                                    "periodSeconds": 90,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 70
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/tmp/nova-scheduler.sh",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "nova-scheduler.sh"
                                    },
                                    {
                                        "mountPath": "/tmp/health-probe.py",
                                        "name": "nova-bin",
                                        "readOnly": true,
                                        "subPath": "health-probe.py"
                                    },
                                    {
                                        "mountPath": "/etc/nova/nova.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "nova.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/logging.conf",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/nova/policy.yaml",
                                        "name": "nova-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:rabbitmq-nodes,openstack:mariadb-cluster,openstack:keystone-api,openstack:nova-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "nova-db-sync"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "nova-scheduler",
                        "serviceAccountName": "nova-scheduler",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "nova-bin"
                                },
                                "name": "nova-bin"
                            },
                            {
                                "name": "nova-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "nova-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-19T07:01:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-19T07:01:44Z",
                        "lastUpdateTime": "2025-05-20T00:45:42Z",
                        "message": "ReplicaSet \"nova-scheduler-5dc78c84dd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "octavia",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:30:36Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "octavia",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "octavia",
                    "application": "octavia",
                    "component": "api",
                    "release_group": "octavia"
                },
                "name": "octavia-api",
                "namespace": "openstack",
                "resourceVersion": "12582365",
                "uid": "6fc48092-7d48-4b82-a087-f4ae2472b552"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "octavia",
                        "app.kubernetes.io/name": "octavia",
                        "application": "octavia",
                        "component": "api",
                        "release_group": "octavia"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "41a030e83eb9becece729dedcb9754c58a8ea9d9317ee4d68ccd34ea8fb8befa",
                            "configmap-etc-hash": "9faa0160e32f8379c338a637aeeed6ad6288e8b5fa57ba1b6825dbabf9113cf6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "octavia",
                            "app.kubernetes.io/name": "octavia",
                            "application": "octavia",
                            "component": "api",
                            "release_group": "octavia"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/octavia-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/octavia:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/octavia-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "name": "octavia-api",
                                "ports": [
                                    {
                                        "containerPort": 9876,
                                        "name": "o-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9876,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/octavia",
                                        "name": "pod-etc-octavia"
                                    },
                                    {
                                        "mountPath": "/tmp/octavia-api.sh",
                                        "name": "octavia-bin",
                                        "readOnly": true,
                                        "subPath": "octavia-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/octavia.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "octavia.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/octavia-api-uwsgi.ini",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "octavia-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/logging.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/server_ca.key.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.key.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/server_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/client_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/client.key-and-cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client.key-and-cert.pem"
                                    },
                                    {
                                        "mountPath": "/var/run/octavia",
                                        "name": "pod-run-octavia"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "octavia-driver-agent",
                                    "--config-dir",
                                    "/etc/octavia/octavia.conf"
                                ],
                                "image": "chaerikim/octavia:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "octavia-agent",
                                "resources": {},
                                "securityContext": {
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/octavia",
                                        "name": "pod-etc-octavia"
                                    },
                                    {
                                        "mountPath": "/tmp/octavia-api.sh",
                                        "name": "octavia-bin",
                                        "readOnly": true,
                                        "subPath": "octavia-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/octavia.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "octavia.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/logging.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/var/run/octavia",
                                        "name": "pod-run-octavia"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api,openstack:rabbitmq-nodes,openstack:memcached,openstack:neutron-server"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "octavia-db-sync,octavia-ks-user,octavia-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "octavia-api",
                        "serviceAccountName": "octavia-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-etc-octavia"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "octavia-bin"
                                },
                                "name": "octavia-bin"
                            },
                            {
                                "name": "octavia-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "octavia-etc"
                                }
                            },
                            {
                                "name": "octavia-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "octavia-certs"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-run-octavia"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-04-19T14:30:36Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-05-20T02:50:57Z",
                        "message": "ReplicaSet \"octavia-api-86976bdbf7\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "octavia",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:30:36Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "housekeeping",
                    "app.kubernetes.io/instance": "octavia",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "octavia",
                    "application": "octavia",
                    "component": "housekeeping",
                    "release_group": "octavia"
                },
                "name": "octavia-housekeeping",
                "namespace": "openstack",
                "resourceVersion": "12582403",
                "uid": "30aca087-5527-4db4-8a79-c85b567e89cf"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "housekeeping",
                        "app.kubernetes.io/instance": "octavia",
                        "app.kubernetes.io/name": "octavia",
                        "application": "octavia",
                        "component": "housekeeping",
                        "release_group": "octavia"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "41a030e83eb9becece729dedcb9754c58a8ea9d9317ee4d68ccd34ea8fb8befa",
                            "configmap-etc-hash": "9faa0160e32f8379c338a637aeeed6ad6288e8b5fa57ba1b6825dbabf9113cf6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "housekeeping",
                            "app.kubernetes.io/instance": "octavia",
                            "app.kubernetes.io/name": "octavia",
                            "application": "octavia",
                            "component": "housekeeping",
                            "release_group": "octavia"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "housekeeping"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/octavia-housekeeping.sh",
                                    "start"
                                ],
                                "image": "chaerikim/octavia:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/octavia-housekeeping.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "name": "octavia-housekeeping",
                                "resources": {},
                                "securityContext": {
                                    "runAsUser": 42424
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/octavia",
                                        "name": "pod-etc-octavia"
                                    },
                                    {
                                        "mountPath": "/tmp/octavia-housekeeping.sh",
                                        "name": "octavia-bin",
                                        "readOnly": true,
                                        "subPath": "octavia-housekeeping.sh"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/octavia.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "octavia.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/logging.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/server_ca.key.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.key.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/server_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/client_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/client.key-and-cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client.key-and-cert.pem"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api,openstack:rabbitmq-nodes,openstack:memcached,openstack:neutron-server,openstack:octavia-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "octavia-db-sync,octavia-ks-user,octavia-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "octavia-housekeeping",
                        "serviceAccountName": "octavia-housekeeping",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-etc-octavia"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "octavia-bin"
                                },
                                "name": "octavia-bin"
                            },
                            {
                                "name": "octavia-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "octavia-etc"
                                }
                            },
                            {
                                "name": "octavia-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "octavia-certs"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-04-19T14:30:36Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-05-20T02:51:03Z",
                        "message": "ReplicaSet \"octavia-housekeeping-7cf4d8d85c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "octavia",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:30:36Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "worker",
                    "app.kubernetes.io/instance": "octavia",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "octavia",
                    "application": "octavia",
                    "component": "worker",
                    "release_group": "octavia"
                },
                "name": "octavia-worker",
                "namespace": "openstack",
                "resourceVersion": "12582405",
                "uid": "3c87a3ca-cd14-4caf-84fd-ccb3a3264419"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "worker",
                        "app.kubernetes.io/instance": "octavia",
                        "app.kubernetes.io/name": "octavia",
                        "application": "octavia",
                        "component": "worker",
                        "release_group": "octavia"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "41a030e83eb9becece729dedcb9754c58a8ea9d9317ee4d68ccd34ea8fb8befa",
                            "configmap-etc-hash": "9faa0160e32f8379c338a637aeeed6ad6288e8b5fa57ba1b6825dbabf9113cf6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "worker",
                            "app.kubernetes.io/instance": "octavia",
                            "app.kubernetes.io/name": "octavia",
                            "application": "octavia",
                            "component": "worker",
                            "release_group": "octavia"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "octavia"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "worker"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/octavia-worker.sh",
                                    "start"
                                ],
                                "image": "chaerikim/octavia:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/octavia-worker.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "name": "octavia-worker",
                                "resources": {},
                                "securityContext": {
                                    "runAsUser": 42424
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/octavia",
                                        "name": "pod-etc-octavia"
                                    },
                                    {
                                        "mountPath": "/tmp/octavia-worker.sh",
                                        "name": "octavia-bin",
                                        "readOnly": true,
                                        "subPath": "octavia-worker.sh"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/octavia.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "octavia.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/logging.conf",
                                        "name": "octavia-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/server_ca.key.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.key.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/server_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "server_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/client_ca.cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client_ca.cert.pem"
                                    },
                                    {
                                        "mountPath": "/etc/octavia/certs/private/client.key-and-cert.pem",
                                        "name": "octavia-certs",
                                        "subPath": "client.key-and-cert.pem"
                                    },
                                    {
                                        "mountPath": "/var/run/octavia",
                                        "name": "pod-run-octavia"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE",
                                        "value": "openstack:mariadb-cluster,openstack:keystone-api,openstack:rabbitmq-nodes,openstack:memcached,openstack:neutron-server,openstack:octavia-api"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "octavia-db-sync,octavia-ks-user,octavia-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "octavia-worker",
                        "serviceAccountName": "octavia-worker",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-etc-octavia"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "octavia-bin"
                                },
                                "name": "octavia-bin"
                            },
                            {
                                "name": "octavia-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "octavia-etc"
                                }
                            },
                            {
                                "name": "octavia-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "octavia-certs"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "pod-run-octavia"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-04-19T14:30:36Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-04-19T14:30:36Z",
                        "lastUpdateTime": "2025-05-20T02:51:03Z",
                        "message": "ReplicaSet \"octavia-worker-76974bffc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "12",
                    "meta.helm.sh/release-name": "otlp",
                    "meta.helm.sh/release-namespace": "openstack"
                },
                "creationTimestamp": "2025-04-19T15:46:44Z",
                "generation": 12,
                "labels": {
                    "app.kubernetes.io/component": "standalone-collector",
                    "app.kubernetes.io/instance": "otlp",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "opentelemetry-collector",
                    "app.kubernetes.io/version": "0.122.1",
                    "helm.sh/chart": "opentelemetry-collector-0.120.2"
                },
                "name": "otlp-opentelemetry-collector",
                "namespace": "openstack",
                "resourceVersion": "16428854",
                "uid": "81768413-a689-472f-95d0-b1af8f8a5d48"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "otlp",
                        "app.kubernetes.io/name": "opentelemetry-collector",
                        "component": "standalone-collector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "109ea2e1fb8f9cd0a8b3815b1a483c20aeaf4f05c2f95d13288ece2de1915529",
                            "kubectl.kubernetes.io/restartedAt": "2025-05-29T09:56:56Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "otlp",
                            "app.kubernetes.io/name": "opentelemetry-collector",
                            "component": "standalone-collector"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config=/conf/relay.yaml"
                                ],
                                "command": [
                                    "/otelcol-contrib"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "value": "819MiB"
                                    }
                                ],
                                "image": "otel/opentelemetry-collector-contrib:0.122.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 13133,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "opentelemetry-collector",
                                "ports": [
                                    {
                                        "containerPort": 4317,
                                        "name": "otlp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 4318,
                                        "name": "otlp-http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8889,
                                        "name": "prometheus",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 13133,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    }
                                },
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "opentelemetry-collector-configmap"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "otlp-opentelemetry-collector",
                        "serviceAccountName": "otlp-opentelemetry-collector",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "relay",
                                            "path": "relay.yaml"
                                        }
                                    ],
                                    "name": "otlp-opentelemetry-collector"
                                },
                                "name": "opentelemetry-collector-configmap"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-05-08T05:20:33Z",
                        "lastUpdateTime": "2025-05-08T05:20:33Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-29T09:54:21Z",
                        "lastUpdateTime": "2025-05-29T09:56:58Z",
                        "message": "ReplicaSet \"otlp-opentelemetry-collector-7c5dc764d9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 12,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "meta.helm.sh/release-name": "placement",
                    "meta.helm.sh/release-namespace": "openstack",
                    "openstackhelm.openstack.org/release_uuid": ""
                },
                "creationTimestamp": "2025-04-19T14:04:18Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/component": "api",
                    "app.kubernetes.io/instance": "placement",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "placement",
                    "application": "placement",
                    "component": "api",
                    "release_group": "placement"
                },
                "name": "placement-api",
                "namespace": "openstack",
                "resourceVersion": "12664822",
                "uid": "74f29d56-03d0-4857-8e7b-a1426acc6034"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "api",
                        "app.kubernetes.io/instance": "placement",
                        "app.kubernetes.io/name": "placement",
                        "application": "placement",
                        "component": "api",
                        "release_group": "placement"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": 3,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "configmap-bin-hash": "b87ad0812ba1bd42a43d744a6430089aed4a06d6125048aba5d12172657d8372",
                            "configmap-etc-hash": "0e6f1e520203433049c0254e39d61b67537c77eacdc0480d19401533be94e474",
                            "openstackhelm.openstack.org/release_uuid": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "api",
                            "app.kubernetes.io/instance": "placement",
                            "app.kubernetes.io/name": "placement",
                            "application": "placement",
                            "component": "api",
                            "release_group": "placement"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "release_group",
                                                        "operator": "In",
                                                        "values": [
                                                            "placement"
                                                        ]
                                                    },
                                                    {
                                                        "key": "application",
                                                        "operator": "In",
                                                        "values": [
                                                            "placement"
                                                        ]
                                                    },
                                                    {
                                                        "key": "component",
                                                        "operator": "In",
                                                        "values": [
                                                            "api"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 10
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/tmp/placement-api.sh",
                                    "start"
                                ],
                                "image": "chaerikim/placement:osprof-4.2.0-otel-1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/tmp/placement-api.sh",
                                                "stop"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8778,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "placement-api",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "p-api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8778,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": false,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "pod-tmp"
                                    },
                                    {
                                        "mountPath": "/var/www/cgi-bin/placement",
                                        "name": "wsgi-placement"
                                    },
                                    {
                                        "mountPath": "/tmp/placement-api.sh",
                                        "name": "placement-bin",
                                        "readOnly": true,
                                        "subPath": "placement-api.sh"
                                    },
                                    {
                                        "mountPath": "/etc/placement/placement.conf",
                                        "name": "placement-etc",
                                        "readOnly": true,
                                        "subPath": "placement.conf"
                                    },
                                    {
                                        "mountPath": "/etc/placement/placement-api-uwsgi.ini",
                                        "name": "placement-etc",
                                        "readOnly": true,
                                        "subPath": "placement-api-uwsgi.ini"
                                    },
                                    {
                                        "mountPath": "/etc/placement/logging.conf",
                                        "name": "placement-etc",
                                        "readOnly": true,
                                        "subPath": "logging.conf"
                                    },
                                    {
                                        "mountPath": "/etc/placement/policy.yaml",
                                        "name": "placement-etc",
                                        "readOnly": true,
                                        "subPath": "policy.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/apache2/conf-enabled/wsgi-placement.conf",
                                        "name": "placement-etc",
                                        "readOnly": true,
                                        "subPath": "wsgi-placement.conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "kubernetes-entrypoint"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INTERFACE_NAME",
                                        "value": "eth0"
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/"
                                    },
                                    {
                                        "name": "DEPENDENCY_SERVICE"
                                    },
                                    {
                                        "name": "DEPENDENCY_JOBS",
                                        "value": "placement-db-sync,placement-ks-service,placement-ks-user,placement-ks-endpoints"
                                    },
                                    {
                                        "name": "DEPENDENCY_DAEMONSET"
                                    },
                                    {
                                        "name": "DEPENDENCY_CONTAINER"
                                    },
                                    {
                                        "name": "DEPENDENCY_POD_JSON"
                                    },
                                    {
                                        "name": "DEPENDENCY_CUSTOM_RESOURCE"
                                    }
                                ],
                                "image": "quay.io/rackspace/rackerlabs-kubernetes-entrypoint:latest-ubuntu_jammy",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsUser": 65534
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "openstack-control-plane": "enabled"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsUser": 42424
                        },
                        "serviceAccount": "placement-api",
                        "serviceAccountName": "placement-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "pod-tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "wsgi-placement"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "placement-bin"
                                },
                                "name": "placement-bin"
                            },
                            {
                                "name": "placement-etc",
                                "secret": {
                                    "defaultMode": 292,
                                    "secretName": "placement-etc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-04-19T14:04:18Z",
                        "lastUpdateTime": "2025-04-19T14:04:18Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-05-20T07:16:07Z",
                        "lastUpdateTime": "2025-05-20T07:16:07Z",
                        "message": "ReplicaSet \"placement-api-7d88f4f595\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
